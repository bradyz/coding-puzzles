Beyond Bags of Features: Spatial Pyramid Matching for Recognizing Natural Scene categories
Lazebnik, Schmid, and Ponce, CVPR 2006
http://www-cvr.ai.uiuc.edu/ponce_grp/publication/paper/cvpr06b.pdf

================================================================================
NOTES
================================================================================

0. ABSTRACT:
method - recognize scene categories by approximate global geometry correspondence
technique - partition into finer sub-regions, histogram local features
spatial pyramid - simple, efficient extension of orderless bag-of-features
results - exceeds state of art Caltech-101 on 15 scene categories
insights - Torralba "gist", SIFT

1. INTRODUCTION:
problem - recognize semantic category
bag-of-features - collection of orderless local features, disregard spatiality
difficulties - heavy clutter, occlusion, viewpoint change
generative part models - significant computational expense
geometric correspondence - significant computational expense
robustness - increase invariance of features, affine-invariant detectors
method - kernel-based, rough global geometric correspondence from pyramid matching
pyramid matching - subdivide image, compute feature histogram
performance - outperforms bag-of-features, some geometric correspondence
gist - capture scene, inform object search of context

2. PREVIOUS WORK:
histograms - locally orderless images
Gaussian aperture -
spatial pyramid - fixed hiearchy of rectangular windows, varies resolution
multiresolution histograms - repeatedly subsample, recompute histogram, scales
spatial pyramid vs mr histogram - pyramid is higher dimension, preserves info
capabilities - with an appropriate kernel, can approximate geometric matching
subdivision scheme - how to divide and conquer, subdividing vs disordering

3. SPATIAL PYRAMID MATCHING:
pyramid matching - Grauman, find similarities between X, Y, sets of d-dim vectors
grid - two points match in same cell, more weight for finer resolution matches
histogram intersect function - \sum_i_d{min(H_X(i), H_Y(i))}
pyramid match kernel - histogram intersect function with weights
Mercer kernels - histogram intersect, pyramid match kernel
orthogonal approach - pyramid match in 2d, use clustering techniques
final kernel - sum of separate channel kernels, follows visual vocabulary
dimensionality - M * 1/3 * (4^(L+1) - 1)
efficiency - M = 400, L = 3 gives 34k-d histogram, fast due to sparseness
normalization - normalize histograms by total weight for efficiency

4. FEATURE EXTRACTION:
weak features - oriented edge points, two scales and eight orientations, M = 16
strong features - SIFT (16 x 16)
visual vocabulary - k-means on random subset of patches, M = 200, 400
dense features - Fei-Fei and Perona show dense features work well for scenes

5. EXPERIMENTS:
datasets - Caltech-101, Graz, fifteen scene categories
processing - all greyscale
multi-class classification - SVM trained with one-versus-all rule
Fei-Fei, Perona - 15 scene categories, 200-400 images per, 300 x 250 res
Direchlet allocation - LDA, Fei-Fei, Perona, unsupervised dimensionality reduction
pLSA - probabilistic latent factor semantic analysis
pyramid - using all levels gives a heavy increase
strong features - accuracy drops from L = 2 to 3, means too finely subdivided
advantage - combined resolutions are robust to individual level failures
feature set comparison - weak are not as good as strong, but fair with pyramid
increasing vocabulary size - not as effective as geometric cues from pyramid
Caltech-101 - 31-800 images per, 300 x 300 res, diverse, but not very cluttered
confusions - similar textures, animal camoflauge
good performance - classification, object recognition with little clutter, in poses
Graz dataset - high intra-class variation, range of scale and poses
two-class detection - object vs background
ROC Curves - generated by thresholding raw SVM output
performance - little gain from L = 0 to 2, geometric variability, no global features

6. DISCUSSION:
image categorization - based on modification of pyramid match kernel
performance - does very well with global features, okay in high variability
extensions - combine spatial pyramid with invariant features
